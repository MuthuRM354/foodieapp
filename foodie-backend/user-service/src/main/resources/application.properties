# Application configuration
spring.application.name=user-service
server.port=8081
server.servlet.context-path=/user-service

# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/foodie_users?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=Inivin@4854
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.generate-ddl=true

# JWT Configuration
app.jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000
app.jwt.verification-expiration=86400000

# Security Configuration
app.security.public-paths=/api/v1/auth/**,/api/v1/otp/**,/api/v1/password/**,/api/v1/registration/**,/swagger-ui/**,/v3/api-docs/**

# Service URLs - for microservice communication
restaurant.service.url=http://localhost:8082
order.service.url=http://localhost:8083
notification.service.url=http://localhost:8084/notification-service
payment.service.url=http://localhost:8085/payment-service

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
app.cors.allowed-headers=*
app.cors.allow-credentials=true
app.cors.max-age=3600




# Logging Configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.level.com.foodieapp.user=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:muthurm527@gmail.com}
spring.mail.password=${MAIL_PASSWORD:gvfa ctot nrlb ibki}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.connectiontimeout=5000

# App specific settings
app.frontend.url=http://localhost:3000

# Cache Configuration
app.cache.enabled=true
app.cache.names=users,roles,verification,otpAttempts

# SMS Configuration
app.sms.enabled=true
app.sms.api.key=textbelt
app.sms.api.url=https://textbelt.com/text

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${OAUTH2_REDIRECT_URI:http://localhost:8081/user-service/login/oauth2/code/google}
app.oauth2.enabled=true

# Management endpoints for health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Initial admin user configuration
app.admin.email=admin@foodieapp.com
app.admin.username=admin
app.admin.password=YourStrongPassword123!
app.admin.phone=+1234567890


# Rest client settings
spring.mvc.throw-exception-if-no-handler-found=false
spring.web.resources.add-mappings=false

# Error handling settings
server.error.whitelabel.enabled=false
server.error.include-stacktrace=never
server.error.include-message=always

# Timeout settings for rest template
app.rest-template.connect-timeout=5000

# Profile picture storage configuration
app.user.profile-pictures.path=profile-pictures
app.user.profile-pictures.base-url=${server.servlet.context-path}/profile-pictures

# Rest template timeout settings
app.rest-template.read-timeout=8000